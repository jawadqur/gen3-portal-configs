name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - master

jobs:
  get-changes-for-envs:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # Outputs all changed envs in a json format to start matrix jobs
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            */portal/**
          dir_names: true
          json: true

      - name: Get dir names
        id: get-dir-names
        uses: actions/github-script@v6
        with:
          script: |
            const folders = JSON.parse("${{ steps.changed-files.outputs.all_changed_files }}");
            const newArr = [];
            for (let folder of folders) {
              const folderNameParts = folder.split('/');
              const folderName = `${folderNameParts[0]}`
              if (!newArr.includes(folderName)) {
                  newArr.push(folderName)
              }
            }
            core.setOutput('dir_names', JSON.stringify(JSON.stringify(newArr)))
      - id: set-matrix
        run: echo "matrix={\"environments\":${{ steps.get-dir-names.outputs.dir_names }}}" >> "$GITHUB_OUTPUT"

  matrix-builder-job:
    name: Job for ${{ matrix.environments }}
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: [get-changes-for-envs]
    strategy:
      matrix: ${{ fromJSON(needs.get-changes-for-envs.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: feat/jq_prebuilder
          fetch-depth: 1
          repository: uc-cdis/data-portal
          path: './data-portal'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # https://github.com/docker/login-action#quayio
      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        env: 
          RAWTAG=${{ matrix.environments }}
          TAG=${$RAWTAG//./_}
        with:
          build-args: |
            PORTAL_HOSTNAME: ${{ matrix.environments }}
          context: .
          push: true
          tags: quay.io/data-portal-prebuilt:${TAG}



